int _value = 1;
  String value = " ";
  String bar = Strings.practice;
  var snackBar;
  var validator;
  bool valuefirst = false;
  bool valuesecond = false;
  String? language;
  final _formkey = GlobalKey<FormState>();
  List items = [Strings.hindi, Strings.gujrati, Strings.english];
  DateTime? selectedDate;
  TextEditingController dateinput = TextEditingController();

  //text editing controller for text field
  @override
  void initState() {
    dateinput.text = ""; //set the initial value of text field
    super.initState();
  }

  DateTime currentValue = DateTime.now();
  final formate = DateFormat('yyyy-MM-dd');

  //late DateTime _dateTime = DateTime.now();
  int val = 0;
  -----------------------------------------------------------------
  Radio Button:

      int _value = 1;
      bool valuefirst = false;
      bool valuesecond = false;

                                           Text(
                                             Strings.select_gender,
                                             style:
                                                 TextStyle(fontSize: 17, fontWeight: FontWeight.bold),
                                           ), //Select Gender
                                           Transform.translate(
                                             offset: Offset(-15, 5),
                                             child: Row(
                                               mainAxisAlignment: MainAxisAlignment.start,
                                               crossAxisAlignment: CrossAxisAlignment.center,
                                               mainAxisSize: MainAxisSize.max,
                                               children: [
                                                 Radio(
                                                     value: 1,
                                                     groupValue: _value,
                                                     onChanged: (val) {
                                                       setState(() {
                                                         _value = val as int;
                                                       });
                                                     }),
                                                 const Text(Strings.male),
                                                 Radio(
                                                     value: 2,
                                                     groupValue: _value,
                                                     onChanged: (val) {
                                                       setState(() {
                                                         _value = val as int;
                                                       });
                                                     }),
                                                 const Text(Strings.female),
                                                 Radio(
                                                     value: 3,
                                                     groupValue: _value,
                                                     onChanged: (val) {
                                                       setState(() {
                                                         _value = val as int;
                                                       });
                                                     }),
                                                 const Text(Strings.other),
                                               ],
                                             ),
                                           ),
 -----------------------------------------------------------------
   Date Picker:

     DateTime? selectedDate;
     TextEditingController dateinput = TextEditingController();

     //text editing controller for text field
     @override
     void initState() {
       dateinput.text = ""; //set the initial value of text field
       super.initState();
     }

     DateTime currentValue = DateTime.now();
     final formate = DateFormat('yyyy-MM-dd');

     //late DateTime _dateTime = DateTime.now();
     int val = 0;

                                   Container(
                                     child: TextFormField(
                                       validator: (value){
                                         if (value == null || value.isEmpty){
                                           return Strings.date_validator;
                                         }
                                         return null;
                                       },
                                         controller: dateinput,
                                         decoration: const InputDecoration(
                                             icon: Icon(Icons.calendar_today_rounded,
                                             color: Colors.blue),

                                             labelText: Strings.select_date),
                                         readOnly: true,
                                         onTap: () async {
                                           DateTime? pickeddate = await showDatePicker(
                                             context: context,
                                             initialDate: currentValue,
                                             firstDate: DateTime(2001),
                                             lastDate: DateTime.now(),
                                           );
                                           if (pickeddate != null) {
                                             print(pickeddate);
                                             currentValue = pickeddate;
                                             String formattedDate =
                                             DateFormat('yyyy-MM-dd').format(pickeddate);
                                             print(formattedDate);
                                             setState(() {
                                               dateinput.text = formattedDate;
                                             });
                                           } else {
                                             print(Strings.not_select);
                                           }
                                         }),
                                   ),

  -----------------------------------------------------------------
  String? language;
  List items = [Strings.hindi, Strings.gujrati, Strings.english];
                                    DropdownButton(


                                      hint: Text(Strings.select_language),
                                      onChanged: (newvalue) {
                                        setState(() {
                                          language = newvalue as String?;
                                        });
                                      },
                                      value: language,
                                      isExpanded: true,
                                      items: items.map((valueItem) {
                                        return DropdownMenuItem(
                                            value: valueItem, child: Text(valueItem));
                                      }).toList(),
                                    ),

  -----------------------------------------------------------------
                      Transform.translate(
                        offset: Offset(-13, 1),
                        child: Row(
                          children: [
                            Checkbox(
                                value: this.valuefirst,
                                onChanged: (bool? value) {
                                  setState(() {
                                    this.valuefirst = value!;
                                  });
                                }),
                            const Text(Strings.privacy_policy),
                          ],
                          //checkbox
                        ),
                      ),

 -----------------------------------------------------------------
                            ElevatedButton(
                              onPressed: () {
                                // _showToastMsg();
                                Fluttertoast.showToast(
                                    msg: "Please select privacy policy",
                                    toastLength: Toast.LENGTH_SHORT,
                                    gravity: ToastGravity.BOTTOM, // also possible "TOP" and "CENTER"
                                    backgroundColor: Colors.grey,
                                    textColor: Colors.black,
                                );
                                if(_formkey.currentState!.validate()) {
                                  snackBar = SnackBar(
                                  content: Text(Strings.registration_success),
                                  action: SnackBarAction(
                                    label: Strings.view,
                                    onPressed: () {
                                      Navigator.pop(context);
                                    },
                                  ),
                                );
                                }
                                ScaffoldMessenger.of(context)
                                    .showSnackBar(snackBar);
                              },
                              child: const Text(Strings.save),
                            ),

 -----------------------------------------------------------------
                                  ListView(
                                        children: [
                                          Container(
                                            color: Colors.green,
                                            child: ListTile(
                                              onTap: (){
                                              Navigator.pop(context);
                                              },
                                              title: Text(Strings.pageview),
                                              leading: Icon(Icons.home),
                                              trailing: Icon(Icons.apps_outlined),
                                              subtitle: Text(Strings.pagevieww),
                                              dense: true,
                                            ),
                                          ),
                                         ],
                                   ),